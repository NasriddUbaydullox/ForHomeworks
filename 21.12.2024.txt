
CREATE TYPE status_user AS ENUM ('customer', 'admin');
CREATE TYPE status_booking AS ENUM ('pending', 'confirmed', 'failed');

CREATE TABLE user_table (
    user_id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    name VARCHAR(150) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(100) NOT NULL,
    role status_user DEFAULT 'customer',
    phone VARCHAR(15) NULL
);

CREATE TABLE muvies (
    movie_id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    title VARCHAR(255) NOT NULL,
    description VARCHAR(255) NULL,
    genre VARCHAR(100) NOT NULL,
    duration_minutes INT NOT NULL,
    release_date DATE NOT NULL,
    rating INT CHECK (rating >= 0 AND rating <= 10),
    poster_url VARCHAR(100) NULL,
    created_at DATE NOT NULL
);

CREATE TABLE cinema (
    cinema_id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    location VARCHAR(255) NOT NULL,
    created_at DATE DEFAULT NOW()
);

CREATE TABLE screen (
    screen_id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    cinema_id INT,
    FOREIGN KEY (cinema_id) REFERENCES cinema(cinema_id),
    name VARCHAR(100) NOT NULL,
    capacity INT NOT NULL -- changed to INT
);

CREATE TABLE seats (
    seat_id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    screen_id INT,
    FOREIGN KEY (screen_id) REFERENCES screen(screen_id),
    seat_number VARCHAR(10) NOT NULL,
    seat_type VARCHAR(100) NOT NULL
);

CREATE TABLE showtime (
    showtime_id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    screen_id INT,
    FOREIGN KEY (screen_id) REFERENCES screen(screen_id),
    movie_id INT,
    FOREIGN KEY (movie_id) REFERENCES muvies(movie_id),
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP NOT NULL,
    price INT NOT NULL
);

CREATE TABLE book (
    booking_id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    user_id INT,
    FOREIGN KEY (user_id) REFERENCES user_table(user_id),
    showtime_id INT,
    FOREIGN KEY (showtime_id) REFERENCES showtime(showtime_id),
    booking_date DATE DEFAULT NOW(),
    total_price INT NOT NULL,
    status status_booking DEFAULT 'pending'
);

CREATE TABLE book_details (
    booking_detail_id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    booking_id INT,
    FOREIGN KEY (booking_id) REFERENCES book(booking_id),
    seat_id INT,
    FOREIGN KEY (seat_id) REFERENCES seats(seat_id),
    price INT NOT NULL
);

CREATE TABLE pay (
    payment_id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
    booking_id INT,
    FOREIGN KEY (booking_id) REFERENCES book(booking_id),
    payment_date DATE DEFAULT NOW(),
    amount INT NOT NULL,
    payment_method VARCHAR(50) NOT NULL,
    status status_booking DEFAULT 'pending'
);

INSERT INTO user_table (name, email, password, role, phone) 
VALUES 
    ('John Doe', 'john.doe@example.com', 'hashed_password1', 'customer', '123456789'),
    ('Admin User', 'admin@example.com', 'hashed_password2', 'admin', NULL),
    ('Jane Smith', 'jane.smith@example.com', 'hashed_password3', 'customer', '987654321');

INSERT INTO muvies (title, description, genre, duration_minutes, release_date, rating, poster_url, created_at) 
VALUES 
    ('Inception', 'A mind-bending thriller', 'Sci-Fi', 148, '2010-07-16', 9, 'https://poster.url/inception.jpg', '2023-12-01'),
    ('Interstellar', 'Exploration beyond our solar system', 'Sci-Fi', 169, '2014-11-07', 10, 'https://poster.url/interstellar.jpg', '2023-12-01'),
    ('The Dark Knight', 'The caped crusader fights crime', 'Action', 152, '2008-07-18', 9, 'https://poster.url/darkknight.jpg', '2023-12-01');

INSERT INTO cinema (name, location, created_at) 
VALUES 
    ('City Mall Cinema', '123 Main St, City', NOW()),
    ('Downtown Cinema', '456 Elm St, Downtown', NOW()),
    ('Uptown Theatre', '789 Maple Ave, Uptown', NOW());

INSERT INTO screen (cinema_id, name, capacity) 
VALUES 
    (1, 'Screen 1', 150),
    (1, 'Screen 2', 200),
    (2, 'IMAX', 300),
    (3, 'Screen A', 100);

INSERT INTO seats (screen_id, seat_number, seat_type) 
VALUES 
    (1, 'A1', 'Regular'),
    (1, 'A2', 'Regular'),
    (1, 'B1', 'VIP'),
    (2, 'C1', 'Premium'),
    (2, 'C2', 'Regular'),
    (3, 'D1', 'Regular');

INSERT INTO showtime (screen_id, movie_id, start_time, end_time, price) 
VALUES 
    (1, 1, '2023-12-22 14:00:00', '2023-12-22 16:30:00', 15),
    (2, 2, '2023-12-22 18:00:00', '2023-12-22 21:00:00', 20),
    (3, 3, '2023-12-23 12:00:00', '2023-12-23 14:30:00', 12);

INSERT INTO book (user_id, showtime_id, total_price, status) 
VALUES 
    (1, 1, 45, 'confirmed'),
    (2, 2, 20, 'pending'),
    (3, 3, 36, 'failed');

INSERT INTO book_details (booking_id, seat_id, price) 
VALUES 
    (1, 1, 15),
    (1, 2, 15),
    (1, 3, 15),
    (2, 4, 20),
    (3, 5, 12),
    (3, 6, 12);

INSERT INTO pay (booking_id, payment_date, amount, payment_method, status) 
VALUES 
    (1, NOW(), 45, 'Credit Card', 'confirmed'),
    (2, NOW(), 20, 'PayPal', 'pending'),
    (3, NOW(), 36, 'Debit Card', 'failed');

--operators

select * from user_table
where user_id = 100 and (role='customer' or role = 'admin');

select * from muvies 
where rating between 7 and 9;

select * from book 
where total_price>=50 and status != 'failed';

select * from pay 
where amount >= 100 or payment_method = 'Credit Card';

--where

select * from user_table
where email like '%example.com';

select * from muvies
where rating >=8;

select * from book 
where user_id = 3;

select * from book 
where user_id = 5;

-- distinct

select distinct genre from muvies; 

select distinct location from cinema;

select distinct status from book;

select distinct start_time from showtime;

--order by

select * from muvies 
order by release_date asc;

select * from book 
order by total_price desc;

select * from pay 
order by payment_date desc;

--Like

select * from user_table
where name Like 'A%';

select * from muvies
where title Like '%Love%';

select * from book
WHERE booking_date LIKE '2024-%';

select name from cinema 
where name Like 'Theater%';

--aliases

select user_id as "UserID" from user_table; 

select name as "FullName" from user_table;

select email as "Email Address" from user_table;

select title as "Muvie title" from muvies; 

select release_date as "Release Date" from muvies;

select rating as "Viewer Rating" from muvies;

select booking_date as "Booking Date" from book; 

select status as "Booking Status" from book;

select total_price as "Amount Paid" from book;

select start_time as "Show Satrt Time" from showtime;

select price as "Ticked Price" from showtime;

select screen_id as "Screen ID" from showtime;




































